{"version":3,"sources":["images/dark-mode-off.svg","images/dark-mode-on.svg","images/close-black.svg","images/close-white.svg","images/black-arrow-up.svg","images/black-arrow-down.svg","images/white-arrow-up.svg","images/white-arrow-down.svg","images/delete-card.svg","components/Header.js","components/UserInput.js","components/FilteringMenu.js","components/TodoCard.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","isDarkModeSelected","src","DarkModeOn","DarkModeOff","alt","onClick","changeThemeColor","UserInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","userInputTitle","target","value","handleDeleteText","handleClickInput","isInputBarClicked","handleDetailChange","userInputDetails","handleCancelClick","handleButtonSubmitClick","_this$state","state","emergencyToActivate","getCardData","_this2","concat","onChange","placeholder","CloseWhite","CloseBlack","undefined","Component","FilteringMenu","handleClick","isClicked","handleOptionClick","optionValue","getFilteringMenuInput","choosedFilteringOption","mountArrow","isDark","WhiteArrowUp","BlackArrowUp","WhiteArrowDown","BlackArrowDown","TodoCard","handleMouseEnter","isCardHovered","handleMouseLeave","chooseBackground","data","emergencyLevel","handleClickButton","deleteCard","key","onMouseEnter","onMouseLeave","title","detail","DeleteCard","MainContainer","cardData","Date","now","pushNewCard","cardsDataContainer","arrayOfTodoCard","push","components_TodoCard","cardKey","newcardsDataContainer","filter","newArrayOfTodoCard","forEach","elem","userInput","filterTodoCards","sort","b","localeCompare","reverse","lowEmergencyCards","moderateEmergencyCards","highEmergencyCards","veryHighEmergencyCards","components_UserInput","components_FilteringMenu","App","react","components_Header","components_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4abd5cac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dark-mode-off.81146204.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark-mode-on.282ab2f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-black.c4c396d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-white.0a6a1e05.svg\";","module.exports = __webpack_public_path__ + \"static/media/black-arrow-up.a7254bd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/black-arrow-down.412f3289.svg\";","module.exports = __webpack_public_path__ + \"static/media/white-arrow-up.c83fb211.svg\";","module.exports = __webpack_public_path__ + \"static/media/white-arrow-down.9024155e.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-card.441d8611.svg\";","import React from \"react\";\n\nimport DarkModeOff from \"../images/dark-mode-off.svg\";\nimport DarkModeOn from \"../images/dark-mode-on.svg\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./styles/Header.scss\";\n\nconst Header = props => {\n  return (\n    <header\n      className={\n        props.isDarkModeSelected ? \"dark-background\" : \"lighter-background\"\n      }\n    >\n      <h1 className={props.isDarkModeSelected ? \"light-font\" : \"darker-font\"}>\n        Task to handle\n      </h1>\n      <div>\n        <img\n          src={props.isDarkModeSelected ? DarkModeOn : DarkModeOff}\n          alt=\"dark icon\"\n        />\n        <p\n          className={props.isDarkModeSelected ? \"light-font\" : \"darker-font\"}\n          onClick={props.changeThemeColor}\n        >\n          Dark Theme\n        </p>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  changeThemeColor: PropTypes.func.isRequired,\n  isDarkModeSelected: PropTypes.bool.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport CloseBlack from \"../images/close-black.svg\";\nimport CloseWhite from \"../images/close-white.svg\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./styles/UserInput.scss\";\n\nclass UserInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInputTitle: \"\",\n      userInputDetails: \"\",\n      emergencyToActivate: \"\",\n      isInputBarClicked: false\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      userInputTitle: event.target.value\n    });\n  };\n\n  handleDeleteText = () => {\n    this.setState({\n      userInputTitle: \"\"\n    });\n  };\n\n  handleClickInput = () => {\n    this.setState({\n      isInputBarClicked: true\n    });\n  };\n\n  handleDetailChange = event => {\n    this.setState({\n      userInputDetails: event.target.value\n    });\n  };\n\n  handleCancelClick = () => {\n    this.setState({\n      isInputBarClicked: false\n    });\n  };\n\n  handleButtonSubmitClick = () => {\n    const {\n      userInputTitle,\n      emergencyToActivate,\n      userInputDetails\n    } = this.state;\n\n    if (userInputTitle && emergencyToActivate) {\n      this.props.getCardData(\n        userInputTitle,\n        emergencyToActivate,\n        userInputDetails\n      );\n      this.setState({\n        isInputBarClicked: false,\n        userInputTitle: \"\",\n        userInputDetails: \"\",\n        emergencyToActivate: \"\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={`user-input ${\n          this.props.isDarkModeSelected\n            ? \"dark-background\"\n            : \"lighter-background\"\n        }`}\n      >\n        <input\n          onClick={this.handleClickInput}\n          className={\n            this.props.isDarkModeSelected\n              ? \"dark-background light-font\"\n              : \"lighter-background dark-font\"\n          }\n          onChange={this.handleChange}\n          placeholder=\"Give a title to your task\"\n          value={this.state.userInputTitle}\n        />\n        {this.state.userInputTitle ? (\n          <img\n            onClick={this.handleDeleteText}\n            className=\"user-input__delete\"\n            src={this.props.isDarkModeSelected ? CloseWhite : CloseBlack}\n            alt=\"delete\"\n          />\n        ) : (\n          undefined\n        )}\n        {this.state.isInputBarClicked ? (\n          <div\n            className={`user-input__details-container ${\n              this.props.isDarkModeSelected\n                ? \"dark-background\"\n                : \"lighter-background\"\n            }`}\n          >\n            <div className=\"user-input__urgency-level-container\">\n              <p\n                className={\n                  this.props.isDarkModeSelected ? \"light-font\" : \"darker-font\"\n                }\n              >\n                Choose the emergency level of the task:\n              </p>\n              <ul>\n                <li\n                  onClick={() =>\n                    this.setState({\n                      emergencyToActivate: \"Low\"\n                    })\n                  }\n                  className={\n                    this.state.emergencyToActivate === \"Low\"\n                      ? \"green-lock\"\n                      : \"green\"\n                  }\n                >\n                  Low\n                </li>\n                <li\n                  onClick={() =>\n                    this.setState({\n                      emergencyToActivate: \"Moderate\"\n                    })\n                  }\n                  className={\n                    this.state.emergencyToActivate === \"Moderate\"\n                      ? \"yellow-lock\"\n                      : \"yellow\"\n                  }\n                >\n                  Moderate\n                </li>\n                <li\n                  onClick={() =>\n                    this.setState({\n                      emergencyToActivate: \"High\"\n                    })\n                  }\n                  className={\n                    this.state.emergencyToActivate === \"High\"\n                      ? \"orange-lock\"\n                      : \"orange\"\n                  }\n                >\n                  High\n                </li>\n                <li\n                  onClick={() =>\n                    this.setState({\n                      emergencyToActivate: \"Very High\"\n                    })\n                  }\n                  className={\n                    this.state.emergencyToActivate === \"Very High\"\n                      ? \"red-lock\"\n                      : \"red\"\n                  }\n                >\n                  Very High\n                </li>\n              </ul>\n            </div>\n            <br />\n            <textarea\n              value={this.state.userInputDetails}\n              onChange={this.handleDetailChange}\n              placeholder=\"Give details about your task (optional)\"\n              className={\n                this.props.isDarkModeSelected\n                  ? \"dark-background light-font light-border\"\n                  : \"lighter-background dark-front darker-border\"\n              }\n            />\n            <div className=\"user-input__buttons-container\">\n              <button\n                className={`user-input__cancel-button ${\n                  this.props.isDarkModeSelected ? \"light-font\" : \"darker-font\"\n                }`}\n                onClick={this.handleCancelClick}\n              >\n                Cancel\n              </button>\n              <button\n                className={\n                  this.state.userInputTitle && this.state.emergencyToActivate\n                    ? undefined\n                    : \"user-input__button-off\"\n                }\n                onClick={this.handleButtonSubmitClick}\n              >\n                Create\n              </button>\n            </div>\n          </div>\n        ) : (\n          undefined\n        )}\n      </div>\n    );\n  }\n}\n\nUserInput.propTypes = {\n  getCardData: PropTypes.func,\n  isDarkModeSelected: PropTypes.bool\n};\n\nexport default UserInput;\n","import React, { Component } from \"react\";\n\nimport BlackArrowUp from \"../images/black-arrow-up.svg\";\nimport BlackArrowDown from \"../images/black-arrow-down.svg\";\nimport WhiteArrowUp from \"../images/white-arrow-up.svg\";\nimport WhiteArrowDown from \"../images/white-arrow-down.svg\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./styles/FilteringMenu.scss\";\n\nclass FilteringMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false,\n      choosedFilteringOption: \"\"\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.isClicked) {\n      this.setState({\n        isClicked: false\n      });\n    } else {\n      this.setState({\n        isClicked: true\n      });\n    }\n  };\n\n  handleOptionClick = optionValue => {\n    this.props.getFilteringMenuInput(optionValue);\n    this.setState({\n      isClicked: false,\n      choosedFilteringOption: optionValue\n    });\n  };\n\n  mountArrow = () => {\n    const isClicked = this.state.isClicked;\n    const isDark = this.props.isDarkModeSelected;\n\n    if (isClicked) {\n      if (isDark) {\n        return WhiteArrowUp;\n      } else {\n        return BlackArrowUp;\n      }\n    } else {\n      if (isDark) {\n        return WhiteArrowDown;\n      } else {\n        return BlackArrowDown;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.handleClick}\n        className={`filtering-menu ${\n          this.props.isDarkModeSelected\n            ? \"dark-background\"\n            : \"lighter-background\"\n        }`}\n      >\n        <p\n          className={\n            this.props.isDarkModeSelected ? \"light-font\" : \"darker-font\"\n          }\n        >\n          {!this.state.choosedFilteringOption\n            ? \"Filter by ...\"\n            : this.state.choosedFilteringOption}\n        </p>\n        <img\n          className=\"filtering-menu__image\"\n          src={this.mountArrow()}\n          alt=\"arrow\"\n        />\n        {this.state.isClicked ? (\n          <div\n            className={`filtering-menu__options-container ${\n              this.props.isDarkModeSelected\n                ? \"dark-background light-font\"\n                : \"lighter-background dark-font\"\n            }`}\n          >\n            <p\n              className={\n                this.props.isDarkModeSelected ? \"dark-hover\" : \"light-hover\"\n              }\n              onClick={() => this.handleOptionClick(\"Urgency (ascending)\")}\n            >\n              Urgency (ascending)\n            </p>\n            <p\n              className={\n                this.props.isDarkModeSelected ? \"dark-hover\" : \"light-hover\"\n              }\n              onClick={() => this.handleOptionClick(\"Urgency (descending)\")}\n            >\n              Urgency (descending)\n            </p>\n            <p\n              className={\n                this.props.isDarkModeSelected ? \"dark-hover\" : \"light-hover\"\n              }\n              onClick={() => this.handleOptionClick(\"Title (ascending)\")}\n            >\n              Title (ascending)\n            </p>\n            <p\n              className={\n                this.props.isDarkModeSelected ? \"dark-hover\" : \"light-hover\"\n              }\n              onClick={() => this.handleOptionClick(\"Title (descending)\")}\n            >\n              Title (descending)\n            </p>\n          </div>\n        ) : (\n          undefined\n        )}\n      </div>\n    );\n  }\n}\n\nFilteringMenu.propTypes = {\n  getFilteringMenuInput: PropTypes.func.isRequired,\n  isDarkModeSelected: PropTypes.bool.isRequired\n};\n\nexport default FilteringMenu;\n","import React, { Component } from \"react\";\n\nimport DeleteCard from \"../images/delete-card.svg\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./styles/TodoCard.scss\";\n\nclass TodoCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCardHovered: false\n    };\n  }\n\n  handleMouseEnter = () => {\n    this.setState({\n      isCardHovered: true\n    });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({\n      isCardHovered: false\n    });\n  };\n\n  chooseBackground = () => {\n    switch (this.props.data.emergencyLevel) {\n      case \"Low\":\n        return \"green-bg\";\n      case \"Moderate\":\n        return \"yellow-bg\";\n      case \"High\":\n        return \"orange-bg\";\n      case \"Very High\":\n        return \"red-bg\";\n      default:\n        break;\n    }\n  };\n\n  handleClickButton = () => {\n    this.props.deleteCard(this.props.data.key);\n  };\n\n  render() {\n    return (\n      <div\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        className={`todo-card ${this.chooseBackground()}`}\n      >\n        <h3 className=\"todo-card__todo-title\">{this.props.data.title}</h3>\n        <p className=\"todo-card__emergency-level\">\n          Emergency level: {this.props.data.emergencyLevel}\n        </p>\n        <p className=\"todo-card__todo-details\">\n          {this.props.data.detail\n            ? this.props.data.detail\n            : \"No additional information\"}\n        </p>\n        {this.state.isCardHovered ? (\n          <img\n            onClick={this.handleClickButton}\n            className=\"light-circle\"\n            src={DeleteCard}\n            alt=\"delete\"\n          />\n        ) : (\n          undefined\n        )}\n      </div>\n    );\n  }\n}\n\nTodoCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  deleteCard: PropTypes.func.isRequired\n};\n\nexport default TodoCard;\n","import React, { Component } from \"react\";\n\nimport UserInput from \"./UserInput\";\nimport FilteringMenu from \"./FilteringMenu\";\nimport TodoCard from \"./TodoCard\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./styles/MainContainer.scss\";\nimport \"../App.scss\";\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardData: {},\n      cardsDataContainer: [],\n      arrayOfTodoCard: [],\n      choosedFilteringOption: \"\"\n    };\n  }\n\n  getCardData = (title, emergencyLevel, detail) => {\n    this.setState(\n      {\n        cardData: {\n          title: title,\n          emergencyLevel: emergencyLevel,\n          detail: detail,\n          key: Date.now()\n        }\n      },\n      () => this.pushNewCard()\n    );\n  };\n\n  pushNewCard = () => {\n    let cardsDataContainer = this.state.cardsDataContainer;\n    let arrayOfTodoCard = this.state.arrayOfTodoCard;\n    cardsDataContainer.push(this.state.cardData);\n    arrayOfTodoCard.push(\n      <TodoCard\n        data={this.state.cardData}\n        key={this.state.cardData.key}\n        deleteCard={this.deleteCard}\n      />\n    );\n    this.setState({\n      cardsDataContainer: cardsDataContainer,\n      arrayOfTodoCard: arrayOfTodoCard\n    });\n  };\n\n  deleteCard = cardKey => {\n    let newcardsDataContainer = this.state.cardsDataContainer.filter(\n      cardData => cardData.key !== cardKey\n    );\n\n    let newArrayOfTodoCard = [];\n    newcardsDataContainer.forEach(elem => {\n      newArrayOfTodoCard.push(\n        <TodoCard data={elem} key={elem.key} deleteCard={this.deleteCard} />\n      );\n    });\n\n    this.setState({\n      cardsDataContainer: newcardsDataContainer,\n      arrayOfTodoCard: newArrayOfTodoCard\n    });\n  };\n\n  getFilteringMenuInput = userInput => {\n    this.setState(\n      {\n        choosedFilteringOption: userInput\n      },\n      () => this.filterTodoCards()\n    );\n  };\n\n  filterTodoCards = () => {\n    const choosedFilteringOption = this.state.choosedFilteringOption;\n    let newcardsDataContainer = this.state.cardsDataContainer;\n\n    if (\n      choosedFilteringOption === \"Title (ascending)\" ||\n      choosedFilteringOption === \"Title (descending)\"\n    ) {\n      newcardsDataContainer.sort((a, b) => a.title.localeCompare(b.title));\n      if (choosedFilteringOption === \"Title (descending)\") {\n        newcardsDataContainer.reverse();\n      }\n    } else {\n      let lowEmergencyCards = [];\n      let moderateEmergencyCards = [];\n      let highEmergencyCards = [];\n      let veryHighEmergencyCards = [];\n\n      newcardsDataContainer.forEach(elem => {\n        if (elem.emergencyLevel === \"Low\") {\n          lowEmergencyCards.push(elem);\n        } else if (elem.emergencyLevel === \"Moderate\") {\n          moderateEmergencyCards.push(elem);\n        } else if (elem.emergencyLevel === \"High\") {\n          highEmergencyCards.push(elem);\n        } else {\n          veryHighEmergencyCards.push(elem);\n        }\n      });\n      newcardsDataContainer = lowEmergencyCards.concat(\n        moderateEmergencyCards,\n        highEmergencyCards,\n        veryHighEmergencyCards\n      );\n\n      if (choosedFilteringOption === \"Urgency (descending)\") {\n        newcardsDataContainer.reverse();\n      }\n    }\n\n    let newArrayOfTodoCard = [];\n    newcardsDataContainer.forEach(elem => {\n      newArrayOfTodoCard.push(\n        <TodoCard data={elem} key={elem.key} deleteCard={this.deleteCard} />\n      );\n    });\n\n    this.setState({\n      cardsDataContainer: newcardsDataContainer,\n      arrayOfTodoCard: newArrayOfTodoCard\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className={`main-container ${\n          this.props.isDarkModeSelected\n            ? \"darker-background\"\n            : \"light-background\"\n        }`}\n      >\n        <div className=\"main-container__filtering-container\">\n          <UserInput\n            isDarkModeSelected={this.props.isDarkModeSelected}\n            getCardData={this.getCardData}\n          />\n          <FilteringMenu\n            isDarkModeSelected={this.props.isDarkModeSelected}\n            getFilteringMenuInput={this.getFilteringMenuInput}\n          />\n        </div>\n        <div className=\"main-container__country-card-container\">\n          {this.state.arrayOfTodoCard}\n        </div>\n      </div>\n    );\n  }\n}\n\nMainContainer.propTypes = {\n  isDarkModeSelected: PropTypes.bool.isRequired\n};\n\nexport default MainContainer;\n","import React, { Component, Fragment } from \"react\";\n\nimport Header from \"./components/Header\";\nimport MainContainer from \"./components/MainContainer\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDarkModeSelected: false\n    };\n  }\n\n  changeThemeColor = () => {\n    const darkOrNot = this.state.isDarkModeSelected;\n\n    if (darkOrNot) {\n      this.setState({\n        isDarkModeSelected: false\n      });\n    } else {\n      this.setState({\n        isDarkModeSelected: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header\n          changeThemeColor={this.changeThemeColor}\n          isDarkModeSelected={this.state.isDarkModeSelected}\n        />\n        <MainContainer isDarkModeSelected={this.state.isDarkModeSelected} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}